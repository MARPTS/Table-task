{"version":3,"sources":["actions/DataActions.js","reducers/DataReducer.js","reducers/reducer.js","components/DataTable.js","components/DataTableContainer.js","components/ColumnSelector.js","components/ColumnSelectorContainer.js","App.js","utils/Json2Excel.js","serviceWorker.js","index.js"],"names":["ADD_COLUMN","REMOVE_COLUMN","SET_COLUMNS","INITIAL_STATE","data","rows","randomData","i","push","base_id","getRandomInt","mo_id","dyna_id","who_id","clo_id","company","getRandomLengthString","country","address","toUpperCase","sr_ranking","pp_ranking","getRandomData","allColumns","selectedColumns","result","stringLength","min","max","Math","floor","random","DataSourceReducer","state","arguments","length","undefined","action","type","newSelectedColumns","Array","from","column","Object","assign","colIndex","indexOf","splice","columns","newFilters","filters","filter","filterIndex","combineReducers","DataReducer","DataTable","searchText","getColumnSearchProps","dataIndex","filterDropdown","_ref","setSelectedKeys","selectedKeys","confirm","clearFilters","react_default","a","createElement","style","padding","input","ref","node","_this","searchInput","placeholder","concat","value","onChange","e","target","onPressEnter","handleSearch","width","marginBottom","display","es_button","onClick","icon","size","marginRight","handleReset","filterIcon","filtered","color","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","main_default","highlightStyle","backgroundColor","searchWords","autoEscape","textToHighlight","setState","_this2","this","props","map","col","obj","objectSpread","title","defaultSortOrder","sortDirections","sorter","b","rowSelection","selectedRowKeys","selectedRows","getSelect","getCheckboxProps","disabled","name","table","bordered","dataSource","pagination","pageSize","Component","DataTableContainer","connect","CheckboxGroup","Checkbox","Group","ColumnSelector","handleToggleColumn","setColumns","plainOptions","label","className","options","defaultValue","children","ColumnSelectorContainer","dispatch","addColumn","removeColumn","Header","Layout","Content","store","createStore","reducer","App","downLoadData","JSONData","FileName","arrData","JSON","parse","excel","row","index","excelFile","uri","encodeURIComponent","link","document","href","download","body","appendChild","click","removeChild","JSONToExcelConvertor","selects","es","layout","background","components_ColumnSelectorContainer","marginLeft","margin","minHeight","components_DataTableContainer","Boolean","window","location","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa8d098f.chunk.js","sourcesContent":["export const ADD_FILTER = 'ADD_FILTER';\r\nexport const REMOVE_FILTER = 'REMOVE_FILTER';\r\nexport const ADD_COLUMN = 'ADD_COLUMN';\r\nexport const REMOVE_COLUMN = 'REMOVE_COLUMN';\r\nexport const SET_COLUMNS = 'SET_COLUMNS';\r\n\r\nexport function addColumn(column) {\r\n    return {\r\n        type: ADD_COLUMN,\r\n        column: column\r\n    }\r\n}\r\n\r\nexport function removeColumn(column) {\r\n    return {\r\n        type: REMOVE_COLUMN,\r\n        column: column\r\n    }\r\n}\r\n\r\nexport function setColumns(columns) {\r\n    return {\r\n        type: SET_COLUMNS,\r\n        columns: columns\r\n    }\r\n}\r\n","import {\r\n    ADD_FILTER, \r\n    REMOVE_FILTER,\r\n    ADD_COLUMN,\r\n    REMOVE_COLUMN,\r\n    SET_COLUMNS\r\n} from '../actions/DataActions.js'\r\n\r\nconst INITIAL_STATE = {\r\n\r\n    data: getRandomData(5000),\r\n    allColumns: ['base_id', 'mo_id', 'dyna_id', 'who_id', 'clo_id', 'company', 'country', 'address', 'sr_ranking', 'pp_ranking'],\r\n    selectedColumns: ['base_id']\r\n}\r\n\r\n\r\nconst DataSourceReducer = (state = INITIAL_STATE, action) => {\r\n\tswitch (action.type) {\r\n        case ADD_COLUMN:\r\n            var newSelectedColumns = Array.from(state.selectedColumns)\r\n            newSelectedColumns.push(action.column)\r\n            return Object.assign({}, state, { selectedColumns: newSelectedColumns })\r\n        case REMOVE_COLUMN:\r\n             var colIndex = state.selectedColumns.indexOf(action.column)\r\n             var newSelectedColumns = Array.from(state.selectedColumns)\r\n            newSelectedColumns.splice(colIndex, 1)\r\n            return Object.assign({}, state, { selectedColumns: newSelectedColumns })\r\n        case SET_COLUMNS:\r\n            return Object.assign({}, state, { selectedColumns: action.columns})\r\n        case ADD_FILTER:\r\n            var newFilters = Array.from(state.filters)\r\n            newFilters.push(action.filter)\r\n            return Object.assign({}, state, { filters: newFilters })\r\n        case REMOVE_FILTER:\r\n            var newFilters = Array.from(state.filters)\r\n            newFilters.splice(action.filterIndex, 1)\r\n            return Object.assign({}, state, { filters: newFilters })\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nfunction getRandomData(rows) {\r\n    var randomData = []\r\n    for(var i=0; i<rows; i++) {\r\n        randomData.push({\r\n            base_id: 'BID'+getRandomInt(1000000,9999999),\r\n            mo_id: 'S'+getRandomInt(100000000,999999999),\r\n            dyna_id: 'SA'+getRandomInt(10000000,99999999),\r\n            who_id: 'WH'+getRandomInt(10000000,99999999),\r\n            clo_id: 'cl'+getRandomInt(100000,999999),\r\n            company: getRandomLengthString(),\r\n            country: getRandomLengthString(),\r\n            address: getRandomInt(1,1500) + ' ' + getRandomLengthString() + ' ' + getRandomLengthString() + ' ' + getRandomLengthString().toUpperCase(),\r\n            sr_ranking: i+5,\r\n            pp_ranking: i+30\r\n        })\r\n    }\r\n    return randomData\r\n}\r\n\r\nfunction getRandomLengthString() {\r\n    let result=\"\";\r\n    let stringLength = getRandomInt(5,15)\r\n    for(let i=0; i<stringLength; i++) {\r\n        result=result+'x';\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max-min)+min);\r\n}\r\n\r\nexport default DataSourceReducer;","import { combineReducers } from 'redux'\r\n\r\nimport DataReducer from './DataReducer'\r\n\r\nexport default combineReducers({\r\n  DataReducer\r\n})","import React, { Component } from 'react';\r\nimport { Table, Input, Button, Icon } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\n\r\nclass DataTable extends Component {\r\n  state = {\r\n    searchText: '',\r\n  };\r\n\r\n  getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys, selectedKeys, confirm, clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => { this.searchInput = node; }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n          icon=\"search\"\r\n          size=\"small\"\r\n          style={{ width: 90, marginRight: 8 }}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button\r\n          onClick={() => this.handleReset(clearFilters)}\r\n          size=\"small\"\r\n          style={{ width: 90 }}\r\n        >\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select());\r\n      }\r\n    },\r\n    render: (text) => (\r\n      <Highlighter\r\n        highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n        searchWords={[this.state.searchText]}\r\n        autoEscape\r\n        textToHighlight={text.toString()}\r\n      />\r\n    )\r\n  })\r\n\r\n  handleSearch = (selectedKeys, confirm) => {\r\n    confirm();\r\n    this.setState({ searchText: selectedKeys[0] });\r\n  }\r\n\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  }\r\n  \r\n\r\n  \r\n\r\n  render() {\r\n      const columns = this.props.selectedColumns.map((col) => {\r\n        const obj = {\r\n          title: col,\r\n          dataIndex: col,\r\n          ...this.getColumnSearchProps(col),\r\n          defaultSortOrder: 'ascend',\r\n          sortDirections: ['descend', 'ascend'],\r\n        }\r\n        if (col === 'sr_ranking' || col === 'pp_ranking') {\r\n          obj.sorter = (a, b) => {\r\n              return a[col] - b[col]\r\n          }\r\n        }\r\n        return obj;\r\n      })\r\n\r\n      const rowSelection = {\r\n        onChange: (selectedRowKeys, selectedRows) => {\r\n          this.props.getSelect(selectedRows);\r\n        },\r\n        getCheckboxProps: record => ({\r\n          disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n          name: record.name,\r\n        }),\r\n      };\r\n      return (\r\n      // <div className=\"DataTable\">\r\n      //     <table >\r\n      //       <tr>\r\n      //         {this.props.selectedColumns.map(selectedColumn => (\r\n      //             <th>{selectedColumn}</th>\r\n      //         ))}\r\n      //       </tr>\r\n      //       {this.props.data.map(row => (\r\n      //       <tr>\r\n      //            {this.props.selectedColumns.map(selectedColumn => (\r\n      //             <td>{row[selectedColumn]}</td>\r\n      //             ))}\r\n      //       </tr>\r\n      //       ))}\r\n      //     </table>\r\n      //     </div>\r\n      <Table rowSelection={rowSelection} bordered={true} columns={columns} dataSource={this.props.data} pagination={{ pageSize: 20 }} />\r\n      );\r\n    }\r\n  }\r\n\r\nexport default DataTable;","import DataTable from './DataTable.js'\r\nimport { connect } from 'react-redux'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        data: state.DataReducer.data,\r\n        selectedColumns: state.DataReducer.selectedColumns\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      \r\n    }\r\n}\r\n\r\nconst DataTableContainer = connect(\r\n    mapStateToProps,\r\n    null\r\n)(DataTable)\r\n\r\nexport default DataTableContainer","import React, { Component } from 'react';\r\nimport { Checkbox } from 'antd';\r\nconst CheckboxGroup = Checkbox.Group;\r\n\r\n\r\nclass ColumnSelector extends Component {\r\n\r\nhandleToggleColumn = columns => {\r\n    // if (this.props.selectedColumns.indexOf(column) === -1) {\r\n    //     this.props.addColumn(column)\r\n    // } else {\r\n    //     this.props.removeColumn(column)\r\n    // }\r\n    this.props.setColumns(columns);\r\n}\r\n\r\nrender() {\r\n    const plainOptions = this.props.allColumns.map(col => {\r\n        return { \r\n            label: col,\r\n            value: col }\r\n    })\r\n    return (\r\n        <div className=\"ColumnSelector\">\r\n                <CheckboxGroup options={plainOptions} defaultValue={['base_id']} onChange={this.handleToggleColumn} />\r\n                {this.props.children}\r\n         {/* {this.props.allColumns.map(column => (\r\n            <div className=\"Selector\">\r\n                <input type=\"checkbox\" onClick={() => this.handleToggleColumn(column)} checked={this.props.selectedColumns.indexOf(column) != -1}/>{column}\r\n            </div>\r\n            ))} */}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColumnSelector;","import ColumnSelector from './ColumnSelector.js'\r\nimport { connect } from 'react-redux'\r\nimport { addColumn, removeColumn, setColumns } from '../actions/DataActions.js'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        selectedColumns: state.DataReducer.selectedColumns,\r\n        allColumns: state.DataReducer.allColumns\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addColumn: column => dispatch(addColumn(column)),\r\n        removeColumn: column => dispatch(removeColumn(column)),\r\n        setColumns: columns => dispatch(setColumns(columns))\r\n    }\r\n}\r\n\r\nconst ColumnSelectorContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ColumnSelector)\r\n\r\nexport default ColumnSelectorContainer","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux'\nimport reducer from './reducers/reducer.js'\nimport DataTableContainer from './components/DataTableContainer.js';\nimport ColumnSelectorContainer from './components/ColumnSelectorContainer.js';\nimport JSONToExcelConvertor from './utils/Json2Excel';\nimport './App.css';\nimport { Layout, Button } from 'antd';\nconst {\n  Header, Content,\n} = Layout;\n\n\nconst store = createStore(reducer);\n\nclass App extends Component {\n\n  downLoadData = () => {\n    JSONToExcelConvertor(this.selects, 'Data');\n  }\n\n  getSelect = (selects) => {\n    this.selects = selects;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n       <Provider store={store}>\n        <Layout>\n          {/* <Sider\n            breakpoint=\"lg\"\n            collapsedWidth=\"0\"\n            onBreakpoint={(broken) => { console.log(broken); }}\n            onCollapse={(collapsed, type) => { console.log(collapsed, type); }}\n          >\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['4']}>\n              <Menu.Item key=\"1\">\n                <Icon type=\"user\" />\n                <span className=\"nav-text\">nav 1</span>\n              </Menu.Item>\n              <Menu.Item key=\"2\">\n                <Icon type=\"video-camera\" />\n                <span className=\"nav-text\">nav 2</span>\n              </Menu.Item>\n              <Menu.Item key=\"3\">\n                <Icon type=\"upload\" />\n                <span className=\"nav-text\">nav 3</span>\n              </Menu.Item>\n              <Menu.Item key=\"4\">\n                <Icon type=\"user\" />\n                <span className=\"nav-text\">nav 4</span>\n              </Menu.Item>\n            </Menu>\n          </Sider> */}\n            <Layout>\n            <Header style={{ background: '#fff', padding: 0 }} >\n              <ColumnSelectorContainer>\n                <Button style={{marginLeft: 20}} type=\"primary\" onClick={this.downLoadData}>Download</Button>              \n              </ColumnSelectorContainer>\n            </Header>\n            <Content style={{ margin: '24px 16px 0' }}>\n              <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n                <div className=\"Content\">\n                  <DataTableContainer getSelect={this.getSelect}/>\n                </div>\n              </div>\n            </Content>\n            </Layout>\n          </Layout>\n        </Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default function JSONToExcelConvertor(JSONData, FileName,title,filter) {  \n    if(!JSONData)\n        return;\n    //转化json为object\n    var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;  \n\n    var excel = \"<table>\";      \n\n    //设置表头  \n    var row = \"<tr>\";  \n\n    if(title)\n    {\n        //使用标题项\n        for (var i in title) {  \n            row += \"<th align='center'>\" + title[i] + '</th>';\n        }  \n\n    }\n    else{\n        //不使用标题项\n        for (var i in arrData[0]) {  \n            row += \"<th align='center'>\" + i + '</th>';\n        } \n     }\n\n        excel += row + \"</tr>\";  \n\n    //设置数据  \n    for (var i = 0; i < arrData.length; i++) {  \n        var row = \"<tr>\";  \n\n        for (var index in arrData[i]) {\n            //判断是否有过滤行\n            if(filter)\n            {\n                if(filter.indexOf(index)==-1)\n                {\n                     var value = arrData[i][index] == null ? \"\" : arrData[i][index];  \n                     row += '<td>' + value + '</td>'; \n                } \n            }\n            else\n            {\n                 var value = arrData[i][index] == null ? \"\" : arrData[i][index];  \n                 row += \"<td align='center'>\" + value + \"</td>\"; \n            }    \n        }  \n\n        excel += row + \"</tr>\";  \n            }  \n\n            excel += \"</table>\";  \n\n            var excelFile = \"<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:x='urn:schemas-microsoft-com:office:excel' xmlns='http://www.w3.org/TR/REC-html40'>\";  \n    excelFile += '<meta http-equiv=\"content-type\" content=\"application/vnd.ms-excel; charset=UTF-8\">';  \n    excelFile += '<meta http-equiv=\"content-type\" content=\"application/vnd.ms-excel';  \n    excelFile += '; charset=UTF-8\">';  \n    excelFile += \"<head>\";  \n    excelFile += \"<!--[if gte mso 9]>\";  \n    excelFile += \"<xml>\";  \n    excelFile += \"<x:ExcelWorkbook>\";  \n    excelFile += \"<x:ExcelWorksheets>\";  \n    excelFile += \"<x:ExcelWorksheet>\";  \n    excelFile += \"<x:Name>\";  \n    excelFile += \"{worksheet}\";  \n    excelFile += \"</x:Name>\";  \n    excelFile += \"<x:WorksheetOptions>\";  \n    excelFile += \"<x:DisplayGridlines/>\";  \n    excelFile += \"</x:WorksheetOptions>\";  \n    excelFile += \"</x:ExcelWorksheet>\";  \n    excelFile += \"</x:ExcelWorksheets>\";  \n    excelFile += \"</x:ExcelWorkbook>\";  \n    excelFile += \"</xml>\";  \n    excelFile += \"<![endif]-->\";  \n    excelFile += \"</head>\";  \n    excelFile += \"<body>\";  \n    excelFile += excel;  \n    excelFile += \"</body>\";  \n    excelFile += \"</html>\";  \n\n\n    var uri = 'data:application/vnd.ms-excel;charset=utf-8,' + encodeURIComponent(excelFile);  \n\n    var link = document.createElement(\"a\");      \n    link.href = uri;  \n\n    link.style = \"visibility:hidden\";  \n    link.download = FileName + \".xls\";  \n\n    document.body.appendChild(link);  \n    link.click();  \n    document.body.removeChild(link);  \n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}